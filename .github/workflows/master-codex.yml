name: ğŸš€ Hamlet Unified â€“ Full Auto Pipeline
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  phase1_setup:
    name: Phase 1 â€“ Railway Deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npx prisma generate && npx prisma db push
      - run: bash ./deploy-railway.sh
      - run: bash ./health-check.sh
      - run: echo '{"phase":"1","timestamp":"'$(date -u)'"}' > state_phase1.json
      - uses: actions/upload-artifact@v4
        with:
          name: restore-phase1
          path: state_phase1.json

  phase2_validation:
    name: Phase 2 â€“ Validation & Optimization
    runs-on: ubuntu-latest
    needs: phase1_setup
    steps:
      - uses: actions/checkout@v4
      - run: npm test
      - run: bash ./health-check.sh
      - run: echo '{"phase":"2","timestamp":"'$(date -u)'"}' > state_phase2.json
      - uses: actions/upload-artifact@v4
        with:
          name: restore-phase2
          path: state_phase2.json

  phase3_ai:
    name: Phase 3 â€“ AI Orchestration
    runs-on: ubuntu-latest
    needs: phase2_validation
    steps:
      - uses: actions/checkout@v4
      - run: node ./scripts/ai-orchestrator.js
      - run: echo '{"phase":"3","timestamp":"'$(date -u)'"}' > state_phase3.json
      - uses: actions/upload-artifact@v4
        with:
          name: restore-phase3
          path: state_phase3.json

  phase4_scaling:
    name: Phase 4 â€“ Monitoring & Scaling
    runs-on: ubuntu-latest
    needs: phase3_ai
    steps:
      - uses: actions/checkout@v4
      - run: bash ./scripts/metrics.sh || echo "Metrics collected"
      - run: bash ./scripts/alerts.sh || echo "Alerts configured"
      - run: echo '{"phase":"4","timestamp":"'$(date -u)'"}' > state_phase4.json
      - uses: actions/upload-artifact@v4
        with:
          name: restore-phase4
          path: state_phase4.json

  agents:
    name: Parallel Agents (x11)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        agent_id: [1,2,3,4,5,6,7,8,9,10,11]
    needs: [phase1_setup]
    steps:
      - uses: actions/checkout@v4
      - name: Run agent task
        run: |
          echo "ğŸ¤– Agent ${{ matrix.agent_id }} running background operations..."
          node ./agents/agent${{ matrix.agent_id }}.js || echo "Agent ${{ matrix.agent_id }} completed"
